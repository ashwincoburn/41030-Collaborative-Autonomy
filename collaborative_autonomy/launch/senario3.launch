<!-- 
    Check out package http://wiki.ros.org/multirobot_map_merge and multi_map_merge.launch file in turtlebot3_gazebo package
    Senario 3: 
    Leader and Follower
    House map, Leader is continuously moving
    Follower shares the same map and is chasing Leader
    both running SLAM with no preset map, both sharing map

    use <group> set the different nodes namespaces

    https://answers.ros.org/question/314560/namespaces-of-nodes/
    -   You can run multiple instances of a node with the same name, as long as they are in 
        different namespaces.
    -   All topics and services the node advertises or subscribes to are also placed in 
        the same namespace, as long as there is no leading slash in the topic or service name string

 -->

 <launch>
  <!-- Arguments for this Launch File, defaults intended to be used -->
  <arg name="first_tb3_x_pos" default="-2.0"/>
  <arg name="first_tb3_y_pos" default=" -0.5"/>
  <arg name="second_tb3_x_pos" default=" 2.0"/>
  <arg name="second_tb3_y_pos" default=" 0.5"/>
  <arg name="open_rviz" default="true"/>

  <!-- Launch Gazebo World and Spawn Both TB3s -->
  <include file="$(find collaborative_autonomy)/launch/gazebo/sen2_multi_turtlebot3.launch">
    <arg name="first_tb3_x_pos" value="$(arg first_tb3_x_pos)"/>
    <arg name="first_tb3_y_pos" value="$(arg first_tb3_y_pos)"/>
    <arg name="second_tb3_x_pos" value="$(arg second_tb3_x_pos)"/>
    <arg name="second_tb3_y_pos" value="$(arg second_tb3_y_pos)"/>
  </include>

  <!-- Launch SLAM for Both TB3s -->
  <group ns="tb3_leader">
    <include file="$(find turtlebot3_slam)/launch/turtlebot3_gmapping.launch">
        <arg name="set_base_frame" value="tb3_leader/base_footprint"/>
        <arg name="set_odom_frame" value="tb3_leader/odom"/>
        <arg name="set_map_frame"  value="tb3_leader/map"/>
    </include>
  </group>
  <group ns="tb3_chaser">
    <include file="$(find turtlebot3_slam)/launch/turtlebot3_gmapping.launch">
        <arg name="set_base_frame" value="tb3_chaser/base_footprint"/>
        <arg name="set_odom_frame" value="tb3_chaser/odom"/>
        <arg name="set_map_frame"  value="tb3_chaser/map"/>
    </include>
  </group>

  <!-- multi_map_merge.launch here and its arguments -->
  <include file="$(find collaborative_autonomy)/launch/gazebo/multi_map_merge_for_two.launch">
    <arg name="first_tb3"  value="tb3_leader"/>
    <arg name="second_tb3" value="tb3_chaser"/>
    <arg name="first_tb3_x_pos" value="$(arg first_tb3_x_pos)"/>
    <arg name="first_tb3_y_pos" value="$(arg first_tb3_y_pos)"/>
    <arg name="second_tb3_x_pos" value="$(arg second_tb3_x_pos)"/>
    <arg name="second_tb3_y_pos" value="$(arg second_tb3_y_pos)"/>
  </include>

  <!-- multi_map RViz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find collaborative_autonomy)/rviz/multi_navigation.rviz"/>
  </group>

  <!-- Launch LEADER Node (Four-points Repeating) for Single TB3 [Same as rosrun] [Seperate Terminal] -->
  <node name="sen2_node_leader" pkg="collaborative_autonomy"  type="sen2_node_leader" output="screen" launch-prefix="gnome-terminal --command"/>

  <!-- Launch CHASER Node (Chase leader) for Single TB3 [Same as rosrun] [Seperate Terminal] -->
  <node name="sen2_node_chaser" pkg="collaborative_autonomy"  type="sen2_node_chaser" output="screen" launch-prefix="gnome-terminal --command"/>

</launch>